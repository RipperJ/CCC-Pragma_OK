

================================================================
== Vitis HLS Report for 'sobel'
================================================================
* Date:           Sat Jun 12 14:59:13 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        sobel
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.965 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    |                 Pipeline                 |
    |   min   |   max   |    min   |    max   |   min  |   max  |                   Type                   |
    +---------+---------+----------+----------+--------+--------+------------------------------------------+
    |   461522|   461523|  4.615 ms|  4.615 ms|  461520|  461520|  loop rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+--------+--------+------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_72_1_VITIS_LOOP_73_2  |   461522|   461522|         4|          1|          1|  461520|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%pin_b_1 = alloca i32 1"   --->   Operation 6 'alloca' 'pin_b_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%pin_a_1 = alloca i32 1"   --->   Operation 7 'alloca' 'pin_a_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%pin_b_2 = alloca i32 1"   --->   Operation 8 'alloca' 'pin_b_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%pin_a_2 = alloca i32 1"   --->   Operation 9 'alloca' 'pin_a_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 10 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_11 = alloca i32 1"   --->   Operation 11 'alloca' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_12 = alloca i32 1"   --->   Operation 12 'alloca' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_13 = alloca i32 1"   --->   Operation 13 'alloca' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_14 = alloca i32 1"   --->   Operation 14 'alloca' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty_15 = alloca i32 1"   --->   Operation 15 'alloca' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_16 = alloca i32 1"   --->   Operation 16 'alloca' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_17 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %src, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %dst, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %rows, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %cols, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%buffer_a_1 = alloca i64 1" [sobel.cpp:58]   --->   Operation 22 'alloca' 'buffer_a_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%buffer_a_2 = alloca i64 1" [sobel.cpp:58]   --->   Operation 23 'alloca' 'buffer_a_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%buffer_b_1 = alloca i64 1" [sobel.cpp:67]   --->   Operation 24 'alloca' 'buffer_b_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%buffer_b_2 = alloca i64 1" [sobel.cpp:67]   --->   Operation 25 'alloca' 'buffer_b_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 26 [1/1] (0.38ns)   --->   "%br_ln0 = br void %rewind_header"   --->   Operation 26 'br' 'br_ln0' <Predicate = true> <Delay = 0.38>

State 2 <SV = 1> <Delay = 3.96>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%do_init = phi i1 1, void, i1 0, void %.split._crit_edge, i1 1, void"   --->   Operation 27 'phi' 'do_init' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%add_ln7223 = phi i10 1, void, i10 %add_ln72, void %.split._crit_edge, i10 1, void" [sobel.cpp:72]   --->   Operation 28 'phi' 'add_ln7223' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%icmp_ln7322 = phi i1 0, void, i1 %icmp_ln73, void %.split._crit_edge, i1 0, void" [sobel.cpp:73]   --->   Operation 29 'phi' 'icmp_ln7322' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%cmp7021 = phi i1 0, void, i1 %icmp, void %.split._crit_edge, i1 0, void" [sobel.cpp:73]   --->   Operation 30 'phi' 'cmp7021' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%col20 = phi i10 0, void, i10 %col, void %.split._crit_edge, i10 0, void"   --->   Operation 31 'phi' 'col20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%row19 = phi i10 0, void, i10 %row, void %.split._crit_edge, i10 0, void"   --->   Operation 32 'phi' 'row19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%indvar_flatten18 = phi i19 0, void, i19 %add_ln72_1, void %.split._crit_edge, i19 0, void" [sobel.cpp:72]   --->   Operation 33 'phi' 'indvar_flatten18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %do_init, void %.split13, void %rewind_init"   --->   Operation 34 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2"   --->   Operation 35 'spectopmodule' 'spectopmodule_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %src"   --->   Operation 36 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %dst"   --->   Operation 37 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %rows"   --->   Operation 38 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %cols"   --->   Operation 39 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.split13"   --->   Operation 40 'br' 'br_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.80ns)   --->   "%add_ln72_1 = add i19 %indvar_flatten18, i19 1" [sobel.cpp:72]   --->   Operation 41 'add' 'add_ln72_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.30ns)   --->   "%select_ln73 = select i1 %icmp_ln7322, i10 0, i10 %col20" [sobel.cpp:73]   --->   Operation 42 'select' 'select_ln73' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.30ns)   --->   "%row = select i1 %icmp_ln7322, i10 %add_ln7223, i10 %row19" [sobel.cpp:73]   --->   Operation 43 'select' 'row' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i10 %row" [sobel.cpp:73]   --->   Operation 44 'zext' 'zext_ln73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%p_shl_mid2 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %row, i10 0" [sobel.cpp:73]   --->   Operation 45 'bitconcatenate' 'p_shl_mid2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%p_shl13_mid2 = bitconcatenate i18 @_ssdm_op_BitConcatenate.i18.i10.i8, i10 %row, i8 0" [sobel.cpp:73]   --->   Operation 46 'bitconcatenate' 'p_shl13_mid2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i9 @_ssdm_op_PartSelect.i9.i10.i32.i32, i10 %add_ln7223, i32 1, i32 9" [sobel.cpp:72]   --->   Operation 47 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.59ns)   --->   "%icmp39 = icmp_ne  i9 %tmp_1, i9 0" [sobel.cpp:72]   --->   Operation 48 'icmp' 'icmp39' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node and_ln99)   --->   "%select_ln73_2 = select i1 %icmp_ln7322, i1 %icmp39, i1 %cmp7021" [sobel.cpp:73]   --->   Operation 49 'select' 'select_ln73_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln73 = mul i20 %zext_ln73, i20 1278" [sobel.cpp:73]   --->   Operation 50 'mul' 'mul_ln73' <Predicate = true> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln73_1 = zext i10 %select_ln73" [sobel.cpp:73]   --->   Operation 51 'zext' 'zext_ln73_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln73_3 = zext i10 %select_ln73" [sobel.cpp:73]   --->   Operation 52 'zext' 'zext_ln73_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.79ns)   --->   "%add_ln75_1 = add i18 %p_shl13_mid2, i18 %zext_ln73_3" [sobel.cpp:75]   --->   Operation 53 'add' 'add_ln75_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i18 %add_ln75_1" [sobel.cpp:75]   --->   Operation 54 'zext' 'zext_ln75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.80ns)   --->   "%add_ln75 = add i20 %zext_ln75, i20 %p_shl_mid2" [sobel.cpp:75]   --->   Operation 55 'add' 'add_ln75' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i20 %add_ln75" [sobel.cpp:76]   --->   Operation 56 'zext' 'zext_ln76' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%src_addr = getelementptr i16 %src, i64 0, i64 %zext_ln76" [sobel.cpp:76]   --->   Operation 57 'getelementptr' 'src_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [2/2] (1.24ns)   --->   "%pin_a = load i20 %src_addr" [sobel.cpp:76]   --->   Operation 58 'load' 'pin_a' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_2 : Operation 59 [1/1] (0.80ns)   --->   "%add_ln77 = add i20 %add_ln75, i20 639" [sobel.cpp:77]   --->   Operation 59 'add' 'add_ln77' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i20 %add_ln77" [sobel.cpp:78]   --->   Operation 60 'zext' 'zext_ln78' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%src_addr_1 = getelementptr i16 %src, i64 0, i64 %zext_ln78" [sobel.cpp:78]   --->   Operation 61 'getelementptr' 'src_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [2/2] (1.24ns)   --->   "%pin_b = load i20 %src_addr_1" [sobel.cpp:78]   --->   Operation 62 'load' 'pin_b' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%buffer_a_1_addr = getelementptr i16 %buffer_a_1, i64 0, i64 %zext_ln73_1" [sobel.cpp:82]   --->   Operation 63 'getelementptr' 'buffer_a_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%buffer_b_1_addr = getelementptr i16 %buffer_b_1, i64 0, i64 %zext_ln73_1" [sobel.cpp:83]   --->   Operation 64 'getelementptr' 'buffer_b_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%buffer_a_2_addr = getelementptr i16 %buffer_a_2, i64 0, i64 %zext_ln73_1" [sobel.cpp:82]   --->   Operation 65 'getelementptr' 'buffer_a_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [2/2] (1.17ns)   --->   "%buffer_a_2_load = load i10 %buffer_a_2_addr" [sobel.cpp:82]   --->   Operation 66 'load' 'buffer_a_2_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%buffer_b_2_addr = getelementptr i16 %buffer_b_2, i64 0, i64 %zext_ln73_1" [sobel.cpp:83]   --->   Operation 67 'getelementptr' 'buffer_b_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [2/2] (1.17ns)   --->   "%buffer_b_2_load = load i10 %buffer_b_2_addr" [sobel.cpp:83]   --->   Operation 68 'load' 'buffer_b_2_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i9 @_ssdm_op_PartSelect.i9.i10.i32.i32, i10 %select_ln73, i32 1, i32 9" [sobel.cpp:99]   --->   Operation 69 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.59ns)   --->   "%icmp_ln99 = icmp_ne  i9 %tmp_2, i9 0" [sobel.cpp:99]   --->   Operation 70 'icmp' 'icmp_ln99' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.27ns) (out node of the LUT)   --->   "%and_ln99 = and i1 %select_ln73_2, i1 %icmp_ln99" [sobel.cpp:99]   --->   Operation 71 'and' 'and_ln99' <Predicate = true> <Delay = 0.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln99 = br i1 %and_ln99, void %.split._crit_edge, void" [sobel.cpp:99]   --->   Operation 72 'br' 'br_ln99' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.72ns)   --->   "%col = add i10 %select_ln73, i10 1" [sobel.cpp:73]   --->   Operation 73 'add' 'col' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i9 @_ssdm_op_PartSelect.i9.i10.i32.i32, i10 %row, i32 1, i32 9" [sobel.cpp:73]   --->   Operation 74 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.59ns)   --->   "%icmp = icmp_ne  i9 %tmp_3, i9 0" [sobel.cpp:73]   --->   Operation 75 'icmp' 'icmp' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.60ns)   --->   "%icmp_ln73 = icmp_eq  i10 %col, i10 641" [sobel.cpp:73]   --->   Operation 76 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 0.60> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.72ns)   --->   "%add_ln72 = add i10 %row, i10 1" [sobel.cpp:72]   --->   Operation 77 'add' 'add_ln72' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.71ns)   --->   "%icmp_ln72 = icmp_eq  i19 %indvar_flatten18, i19 461519" [sobel.cpp:72]   --->   Operation 78 'icmp' 'icmp_ln72' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln72 = br i1 %icmp_ln72, void %rewind_header, void" [sobel.cpp:72]   --->   Operation 79 'br' 'br_ln72' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln135 = br void %rewind_header" [sobel.cpp:135]   --->   Operation 80 'br' 'br_ln135' <Predicate = (icmp_ln72)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.42>
ST_3 : Operation 81 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln73 = mul i20 %zext_ln73, i20 1278" [sobel.cpp:73]   --->   Operation 81 'mul' 'mul_ln73' <Predicate = true> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 82 [1/2] (1.24ns)   --->   "%pin_a = load i20 %src_addr" [sobel.cpp:76]   --->   Operation 82 'load' 'pin_a' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_3 : Operation 83 [1/2] (1.24ns)   --->   "%pin_b = load i20 %src_addr_1" [sobel.cpp:78]   --->   Operation 83 'load' 'pin_b' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_3 : Operation 84 [2/2] (1.17ns)   --->   "%buffer_a_1_load = load i10 %buffer_a_1_addr" [sobel.cpp:82]   --->   Operation 84 'load' 'buffer_a_1_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 85 [2/2] (1.17ns)   --->   "%buffer_b_1_load = load i10 %buffer_b_1_addr" [sobel.cpp:83]   --->   Operation 85 'load' 'buffer_b_1_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 86 [1/2] (1.17ns)   --->   "%buffer_a_2_load = load i10 %buffer_a_2_addr" [sobel.cpp:82]   --->   Operation 86 'load' 'buffer_a_2_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i16 %buffer_a_2_load" [sobel.cpp:82]   --->   Operation 87 'trunc' 'trunc_ln82' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (1.17ns)   --->   "%store_ln82 = store i16 %buffer_a_2_load, i10 %buffer_a_1_addr" [sobel.cpp:82]   --->   Operation 88 'store' 'store_ln82' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 89 [1/2] (1.17ns)   --->   "%buffer_b_2_load = load i10 %buffer_b_2_addr" [sobel.cpp:83]   --->   Operation 89 'load' 'buffer_b_2_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln83 = trunc i16 %buffer_b_2_load" [sobel.cpp:83]   --->   Operation 90 'trunc' 'trunc_ln83' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.17ns)   --->   "%store_ln83 = store i16 %buffer_b_2_load, i10 %buffer_b_1_addr" [sobel.cpp:83]   --->   Operation 91 'store' 'store_ln83' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 92 [1/1] (1.17ns)   --->   "%store_ln85 = store i16 %pin_a, i10 %buffer_a_2_addr" [sobel.cpp:85]   --->   Operation 92 'store' 'store_ln85' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 93 [1/1] (1.17ns)   --->   "%store_ln86 = store i16 %pin_b, i10 %buffer_b_2_addr" [sobel.cpp:86]   --->   Operation 93 'store' 'store_ln86' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>

State 4 <SV = 3> <Delay = 3.71>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%pin_b_1_load = load i16 %pin_b_1" [sobel.cpp:99]   --->   Operation 94 'load' 'pin_b_1_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%pin_a_1_load = load i16 %pin_a_1" [sobel.cpp:99]   --->   Operation 95 'load' 'pin_a_1_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%pin_b_2_load = load i16 %pin_b_2" [sobel.cpp:119]   --->   Operation 96 'load' 'pin_b_2_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%pin_a_2_load = load i16 %pin_a_2" [sobel.cpp:105]   --->   Operation 97 'load' 'pin_a_2_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%p_load49 = load i15 %empty" [sobel.cpp:99]   --->   Operation 98 'load' 'p_load49' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%p_load48 = load i15 %empty_11" [sobel.cpp:99]   --->   Operation 99 'load' 'p_load48' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%p_load47 = load i15 %empty_12"   --->   Operation 100 'load' 'p_load47' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%p_load46 = load i15 %empty_13"   --->   Operation 101 'load' 'p_load46' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%p_load45 = load i16 %empty_14" [sobel.cpp:99]   --->   Operation 102 'load' 'p_load45' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%p_load44 = load i16 %empty_15" [sobel.cpp:99]   --->   Operation 103 'load' 'p_load44' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%p_load43 = load i16 %empty_16" [sobel.cpp:119]   --->   Operation 104 'load' 'p_load43' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%p_load = load i16 %empty_17" [sobel.cpp:105]   --->   Operation 105 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln73 = mul i20 %zext_ln73, i20 1278" [sobel.cpp:73]   --->   Operation 106 'mul' 'mul_ln73' <Predicate = true> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 107 [1/2] (1.17ns)   --->   "%buffer_a_1_load = load i10 %buffer_a_1_addr" [sobel.cpp:82]   --->   Operation 107 'load' 'buffer_a_1_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_4 : Operation 108 [1/2] (1.17ns)   --->   "%buffer_b_1_load = load i10 %buffer_b_1_addr" [sobel.cpp:83]   --->   Operation 108 'load' 'buffer_b_1_load' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %p_load44, i16 %empty_17" [sobel.cpp:99]   --->   Operation 109 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %p_load45, i16 %empty_16" [sobel.cpp:99]   --->   Operation 110 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %buffer_a_1_load, i16 %empty_15" [sobel.cpp:99]   --->   Operation 111 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %buffer_b_1_load, i16 %empty_14" [sobel.cpp:99]   --->   Operation 112 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%store_ln99 = store i15 %p_load48, i15 %empty_13" [sobel.cpp:99]   --->   Operation 113 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%store_ln99 = store i15 %p_load49, i15 %empty_12" [sobel.cpp:99]   --->   Operation 114 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%store_ln99 = store i15 %trunc_ln82, i15 %empty_11" [sobel.cpp:99]   --->   Operation 115 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%store_ln99 = store i15 %trunc_ln83, i15 %empty" [sobel.cpp:99]   --->   Operation 116 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %pin_a_1_load, i16 %pin_a_2" [sobel.cpp:99]   --->   Operation 117 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %pin_b_1_load, i16 %pin_b_2" [sobel.cpp:99]   --->   Operation 118 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %pin_a, i16 %pin_a_1" [sobel.cpp:99]   --->   Operation 119 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%store_ln99 = store i16 %pin_b, i16 %pin_b_1" [sobel.cpp:99]   --->   Operation 120 'store' 'store_ln99' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.77ns)   --->   "%tmp20 = sub i15 %trunc_ln82, i15 %p_load46" [sobel.cpp:82]   --->   Operation 121 'sub' 'tmp20' <Predicate = (and_ln99)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp20, i1 0" [sobel.cpp:82]   --->   Operation 122 'bitconcatenate' 'tmp' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln105 = add i16 %p_load, i16 %pin_a_2_load" [sobel.cpp:105]   --->   Operation 123 'add' 'add_ln105' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 124 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln105 = sub i16 %pin_a, i16 %add_ln105" [sobel.cpp:105]   --->   Operation 124 'sub' 'sub_ln105' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 125 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln105_1 = add i16 %sub_ln105, i16 %tmp" [sobel.cpp:105]   --->   Operation 125 'add' 'add_ln105_1' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 126 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumx_a = add i16 %add_ln105_1, i16 %buffer_a_1_load" [sobel.cpp:105]   --->   Operation 126 'add' 'sumx_a' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln73 = trunc i16 %p_load44" [sobel.cpp:73]   --->   Operation 127 'trunc' 'trunc_ln73' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln73_1 = trunc i16 %pin_a_1_load" [sobel.cpp:73]   --->   Operation 128 'trunc' 'trunc_ln73_1' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.77ns)   --->   "%tmp3918 = sub i15 %trunc_ln73_1, i15 %trunc_ln73" [sobel.cpp:73]   --->   Operation 129 'sub' 'tmp3918' <Predicate = (and_ln99)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp1 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp3918, i1 0" [sobel.cpp:73]   --->   Operation 130 'bitconcatenate' 'tmp1' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106 = add i16 %tmp1, i16 %pin_a_2_load" [sobel.cpp:106]   --->   Operation 131 'add' 'add_ln106' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 132 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln106 = sub i16 %add_ln106, i16 %p_load" [sobel.cpp:106]   --->   Operation 132 'sub' 'sub_ln106' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 133 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106_1 = add i16 %pin_a, i16 %sub_ln106" [sobel.cpp:106]   --->   Operation 133 'add' 'add_ln106_1' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 134 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumy_a = sub i16 %add_ln106_1, i16 %buffer_a_1_load" [sobel.cpp:106]   --->   Operation 134 'sub' 'sumy_a' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 135 [1/1] (0.88ns)   --->   "%sumx_a_1 = call i8 @crop, i16 %sumx_a" [sobel.cpp:110]   --->   Operation 135 'call' 'sumx_a_1' <Predicate = (and_ln99)> <Delay = 0.88> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 136 [1/1] (0.88ns)   --->   "%sumy_a_1 = call i8 @crop, i16 %sumy_a" [sobel.cpp:111]   --->   Operation 136 'call' 'sumy_a_1' <Predicate = (and_ln99)> <Delay = 0.88> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 137 [1/1] (0.70ns)   --->   "%temp_a = call i9 @adder, i8 %sumx_a_1, i8 %sumy_a_1" [sobel.cpp:113]   --->   Operation 137 'call' 'temp_a' <Predicate = (and_ln99)> <Delay = 0.70> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 138 [1/1] (0.77ns)   --->   "%tmp4616 = sub i15 %trunc_ln83, i15 %p_load47" [sobel.cpp:83]   --->   Operation 138 'sub' 'tmp4616' <Predicate = (and_ln99)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%tmp2 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp4616, i1 0" [sobel.cpp:83]   --->   Operation 139 'bitconcatenate' 'tmp2' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln119 = add i16 %p_load43, i16 %pin_b_2_load" [sobel.cpp:119]   --->   Operation 140 'add' 'add_ln119' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 141 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln119 = sub i16 %pin_b, i16 %add_ln119" [sobel.cpp:119]   --->   Operation 141 'sub' 'sub_ln119' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 142 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln119_1 = add i16 %sub_ln119, i16 %tmp2" [sobel.cpp:119]   --->   Operation 142 'add' 'add_ln119_1' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 143 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumx_b = add i16 %add_ln119_1, i16 %buffer_b_1_load" [sobel.cpp:119]   --->   Operation 143 'add' 'sumx_b' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%trunc_ln73_2 = trunc i16 %p_load45" [sobel.cpp:73]   --->   Operation 144 'trunc' 'trunc_ln73_2' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (0.00ns)   --->   "%trunc_ln73_3 = trunc i16 %pin_b_1_load" [sobel.cpp:73]   --->   Operation 145 'trunc' 'trunc_ln73_3' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 146 [1/1] (0.77ns)   --->   "%tmp5214 = sub i15 %trunc_ln73_3, i15 %trunc_ln73_2" [sobel.cpp:73]   --->   Operation 146 'sub' 'tmp5214' <Predicate = (and_ln99)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 147 [1/1] (0.00ns)   --->   "%tmp3 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp5214, i1 0" [sobel.cpp:73]   --->   Operation 147 'bitconcatenate' 'tmp3' <Predicate = (and_ln99)> <Delay = 0.00>
ST_4 : Operation 148 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120 = add i16 %tmp3, i16 %pin_b_2_load" [sobel.cpp:120]   --->   Operation 148 'add' 'add_ln120' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 149 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln120 = sub i16 %add_ln120, i16 %p_load43" [sobel.cpp:120]   --->   Operation 149 'sub' 'sub_ln120' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 150 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_1 = add i16 %pin_b, i16 %sub_ln120" [sobel.cpp:120]   --->   Operation 150 'add' 'add_ln120_1' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 151 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumy_b = sub i16 %add_ln120_1, i16 %buffer_b_1_load" [sobel.cpp:120]   --->   Operation 151 'sub' 'sumy_b' <Predicate = (and_ln99)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 152 [1/1] (0.88ns)   --->   "%sumx_b_1 = call i8 @crop, i16 %sumx_b" [sobel.cpp:124]   --->   Operation 152 'call' 'sumx_b_1' <Predicate = (and_ln99)> <Delay = 0.88> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 153 [1/1] (0.88ns)   --->   "%sumy_b_1 = call i8 @crop, i16 %sumy_b" [sobel.cpp:125]   --->   Operation 153 'call' 'sumy_b_1' <Predicate = (and_ln99)> <Delay = 0.88> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 154 [1/1] (0.70ns)   --->   "%temp_b = call i9 @adder, i8 %sumx_b_1, i8 %sumy_b_1" [sobel.cpp:127]   --->   Operation 154 'call' 'temp_b' <Predicate = (and_ln99)> <Delay = 0.70> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 3.62>
ST_5 : Operation 155 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_72_1_VITIS_LOOP_73_2_str"   --->   Operation 155 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 156 [1/1] (0.00ns)   --->   "%empty_18 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 461520, i64 461520, i64 461520"   --->   Operation 156 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 157 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln73 = mul i20 %zext_ln73, i20 1278" [sobel.cpp:73]   --->   Operation 157 'mul' 'mul_ln73' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln73_2 = zext i10 %select_ln73" [sobel.cpp:73]   --->   Operation 158 'zext' 'zext_ln73_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 159 [1/1] (0.00ns)   --->   "%specpipeline_ln70 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [sobel.cpp:70]   --->   Operation 159 'specpipeline' 'specpipeline_ln70' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 160 [1/1] (0.00ns)   --->   "%specloopname_ln70 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [sobel.cpp:70]   --->   Operation 160 'specloopname' 'specloopname_ln70' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 161 [1/1] (0.75ns)   --->   "%add_ln100_2 = add i13 %zext_ln73_2, i13 5636" [sobel.cpp:100]   --->   Operation 161 'add' 'add_ln100_2' <Predicate = (and_ln99)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 162 [1/1] (0.00ns)   --->   "%sext_ln100 = sext i13 %add_ln100_2" [sobel.cpp:100]   --->   Operation 162 'sext' 'sext_ln100' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 163 [1/1] (0.80ns)   --->   "%add_ln100 = add i20 %sext_ln100, i20 %mul_ln73" [sobel.cpp:100]   --->   Operation 163 'add' 'add_ln100' <Predicate = (and_ln99)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 164 [1/1] (0.80ns)   --->   "%add_ln100_1 = add i20 %add_ln100, i20 1048574" [sobel.cpp:100]   --->   Operation 164 'add' 'add_ln100_1' <Predicate = (and_ln99)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln101 = zext i20 %add_ln100_1" [sobel.cpp:101]   --->   Operation 165 'zext' 'zext_ln101' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 166 [1/1] (0.80ns)   --->   "%add_ln101 = add i20 %add_ln100, i20 637" [sobel.cpp:101]   --->   Operation 166 'add' 'add_ln101' <Predicate = (and_ln99)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 167 [1/1] (0.00ns)   --->   "%add_ln101_cast = zext i20 %add_ln101" [sobel.cpp:101]   --->   Operation 167 'zext' 'add_ln101_cast' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 168 [1/1] (0.30ns)   --->   "%pout_a = call i9 @crop_upper, i9 %temp_a" [sobel.cpp:115]   --->   Operation 168 'call' 'pout_a' <Predicate = (and_ln99)> <Delay = 0.30> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i9 %pout_a" [sobel.cpp:53]   --->   Operation 169 'zext' 'zext_ln53' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 170 [1/1] (0.00ns)   --->   "%dst_addr = getelementptr i16 %dst, i64 0, i64 %zext_ln101" [sobel.cpp:117]   --->   Operation 170 'getelementptr' 'dst_addr' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 171 [1/1] (1.24ns)   --->   "%store_ln117 = store i16 %zext_ln53, i20 %dst_addr" [sobel.cpp:117]   --->   Operation 171 'store' 'store_ln117' <Predicate = (and_ln99)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 917604> <RAM>
ST_5 : Operation 172 [1/1] (0.30ns)   --->   "%pout_b = call i9 @crop_upper, i9 %temp_b" [sobel.cpp:129]   --->   Operation 172 'call' 'pout_b' <Predicate = (and_ln99)> <Delay = 0.30> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i9 %pout_b" [sobel.cpp:62]   --->   Operation 173 'zext' 'zext_ln62' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 174 [1/1] (0.00ns)   --->   "%dst_addr_1 = getelementptr i16 %dst, i64 0, i64 %add_ln101_cast" [sobel.cpp:131]   --->   Operation 174 'getelementptr' 'dst_addr_1' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 175 [1/1] (1.24ns)   --->   "%store_ln131 = store i16 %zext_ln62, i20 %dst_addr_1" [sobel.cpp:131]   --->   Operation 175 'store' 'store_ln131' <Predicate = (and_ln99)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 917604> <RAM>
ST_5 : Operation 176 [1/1] (0.00ns)   --->   "%br_ln132 = br void %.split._crit_edge" [sobel.cpp:132]   --->   Operation 176 'br' 'br_ln132' <Predicate = (and_ln99)> <Delay = 0.00>
ST_5 : Operation 177 [1/1] (0.00ns)   --->   "%return_ln135 = return void @_ssdm_op_Return" [sobel.cpp:135]   --->   Operation 177 'return' 'return_ln135' <Predicate = (icmp_ln72)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('do_init') [27]  (0.387 ns)

 <State 2>: 3.97ns
The critical path consists of the following:
	'phi' operation ('add_ln7223', sobel.cpp:72) with incoming values : ('add_ln72', sobel.cpp:72) [28]  (0 ns)
	'select' operation ('row', sobel.cpp:73) [59]  (0.303 ns)
	'add' operation ('add_ln75_1', sobel.cpp:75) [72]  (0.797 ns)
	'add' operation ('add_ln75', sobel.cpp:75) [74]  (0.809 ns)
	'add' operation ('add_ln77', sobel.cpp:77) [78]  (0.809 ns)
	'getelementptr' operation ('src_addr_1', sobel.cpp:78) [80]  (0 ns)
	'load' operation ('pin_b', sobel.cpp:78) on array 'src' [81]  (1.25 ns)

 <State 3>: 2.42ns
The critical path consists of the following:
	'load' operation ('pin_a', sobel.cpp:76) on array 'src' [77]  (1.25 ns)
	'store' operation ('store_ln85', sobel.cpp:85) of variable 'pin_a', sobel.cpp:76 on array 'buffer_a[2]', sobel.cpp:58 [94]  (1.18 ns)

 <State 4>: 3.71ns
The critical path consists of the following:
	'load' operation ('pin_a_1_load', sobel.cpp:99) on local variable 'pin_a' [45]  (0 ns)
	'sub' operation ('tmp3918', sobel.cpp:73) [128]  (0.775 ns)
	'add' operation ('add_ln106', sobel.cpp:106) [130]  (0 ns)
	'sub' operation ('sub_ln106', sobel.cpp:106) [131]  (0.675 ns)
	'add' operation ('add_ln106_1', sobel.cpp:106) [132]  (0 ns)
	'sub' operation ('sumy_a', sobel.cpp:106) [133]  (0.675 ns)
	'call' operation ('sumy_a', sobel.cpp:111) to 'crop' [135]  (0.884 ns)
	'call' operation ('temp_a', sobel.cpp:113) to 'adder' [136]  (0.705 ns)

 <State 5>: 3.62ns
The critical path consists of the following:
	'add' operation ('add_ln100_2', sobel.cpp:100) [113]  (0.755 ns)
	'add' operation ('add_ln100', sobel.cpp:100) [115]  (0.809 ns)
	'add' operation ('add_ln100_1', sobel.cpp:100) [116]  (0.809 ns)
	'getelementptr' operation ('dst_addr', sobel.cpp:117) [139]  (0 ns)
	'store' operation ('store_ln117', sobel.cpp:117) of variable 'zext_ln53', sobel.cpp:53 on array 'dst' [140]  (1.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
