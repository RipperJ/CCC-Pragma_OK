

================================================================
== Vitis HLS Report for 'VITIS_LOOP_51_2_proc'
================================================================
* Date:           Mon Jun  7 18:58:06 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        sobel
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.738 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                 Pipeline                 |
    |   min   |   max   |    min   |    max   | min | max |                   Type                   |
    +---------+---------+----------+----------+-----+-----+------------------------------------------+
    |      644|      645|  6.440 us|  6.450 us|  641|  641|  loop rewind stp(delay=3 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_51_2  |      644|      644|         5|          1|          1|   641|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %src, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %dst, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%buffer_a_1 = alloca i64 1" [sobel.cpp:35]   --->   Operation 9 'alloca' 'buffer_a_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%buffer_b_1 = alloca i64 1" [sobel.cpp:44]   --->   Operation 10 'alloca' 'buffer_b_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%buffer_a_2 = alloca i64 1" [sobel.cpp:35]   --->   Operation 11 'alloca' 'buffer_a_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%buffer_b_2 = alloca i64 1" [sobel.cpp:44]   --->   Operation 12 'alloca' 'buffer_b_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%window_a_0_0 = alloca i64 1" [sobel.cpp:31]   --->   Operation 13 'alloca' 'window_a_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%window_a_0_1 = alloca i64 1" [sobel.cpp:31]   --->   Operation 14 'alloca' 'window_a_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%window_a_0_2 = alloca i64 1" [sobel.cpp:31]   --->   Operation 15 'alloca' 'window_a_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%window_a_1_0 = alloca i64 1" [sobel.cpp:31]   --->   Operation 16 'alloca' 'window_a_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%window_a_1_1 = alloca i64 1" [sobel.cpp:31]   --->   Operation 17 'alloca' 'window_a_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%window_a_1_2 = alloca i64 1" [sobel.cpp:31]   --->   Operation 18 'alloca' 'window_a_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%window_a_2_0 = alloca i64 1" [sobel.cpp:31]   --->   Operation 19 'alloca' 'window_a_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%window_a_2_1 = alloca i64 1" [sobel.cpp:31]   --->   Operation 20 'alloca' 'window_a_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%window_a_2_2 = alloca i64 1" [sobel.cpp:31]   --->   Operation 21 'alloca' 'window_a_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%window_b_0_0 = alloca i64 1" [sobel.cpp:40]   --->   Operation 22 'alloca' 'window_b_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%window_b_0_1 = alloca i64 1" [sobel.cpp:40]   --->   Operation 23 'alloca' 'window_b_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%window_b_0_2 = alloca i64 1" [sobel.cpp:40]   --->   Operation 24 'alloca' 'window_b_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%window_b_1_0 = alloca i64 1" [sobel.cpp:40]   --->   Operation 25 'alloca' 'window_b_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%window_b_1_1 = alloca i64 1" [sobel.cpp:40]   --->   Operation 26 'alloca' 'window_b_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%window_b_1_2 = alloca i64 1" [sobel.cpp:40]   --->   Operation 27 'alloca' 'window_b_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%window_b_2_0 = alloca i64 1" [sobel.cpp:40]   --->   Operation 28 'alloca' 'window_b_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%window_b_2_1 = alloca i64 1" [sobel.cpp:40]   --->   Operation 29 'alloca' 'window_b_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%window_b_2_2 = alloca i64 1" [sobel.cpp:40]   --->   Operation 30 'alloca' 'window_b_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.38ns)   --->   "%br_ln51 = br void %rewind_header" [sobel.cpp:51]   --->   Operation 31 'br' 'br_ln51' <Predicate = true> <Delay = 0.38>

State 2 <SV = 1> <Delay = 1.17>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%do_init = phi i1 1, void %entry, i1 0, void %._crit_edge.i.i.i, i1 1, void %VITIS_LOOP_51_2_proc.exit"   --->   Operation 32 'phi' 'do_init' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%col1 = phi i10 0, void %entry, i10 %col, void %._crit_edge.i.i.i, i10 0, void %VITIS_LOOP_51_2_proc.exit"   --->   Operation 33 'phi' 'col1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%row_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %row"   --->   Operation 34 'read' 'row_read' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i10 %row_read" [sobel.cpp:51]   --->   Operation 35 'zext' 'zext_ln51' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 36 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln51 = mul i20 %zext_ln51, i20 1278" [sobel.cpp:51]   --->   Operation 36 'mul' 'mul_ln51' <Predicate = (do_init)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%tmp = partselect i9 @_ssdm_op_PartSelect.i9.i10.i32.i32, i10 %row_read, i32 1, i32 9"   --->   Operation 37 'partselect' 'tmp' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.59ns)   --->   "%icmp = icmp_ne  i9 %tmp, i9 0"   --->   Operation 38 'icmp' 'icmp' <Predicate = (do_init)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.72ns)   --->   "%col = add i10 %col1, i10 1" [sobel.cpp:51]   --->   Operation 39 'add' 'col' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln47_1 = zext i10 %col1" [sobel.cpp:47]   --->   Operation 40 'zext' 'zext_ln47_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%buffer_a_1_addr = getelementptr i16 %buffer_a_1, i64 0, i64 %zext_ln47_1" [sobel.cpp:59]   --->   Operation 41 'getelementptr' 'buffer_a_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%buffer_b_1_addr = getelementptr i16 %buffer_b_1, i64 0, i64 %zext_ln47_1" [sobel.cpp:60]   --->   Operation 42 'getelementptr' 'buffer_b_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%buffer_a_2_addr = getelementptr i16 %buffer_a_2, i64 0, i64 %zext_ln47_1" [sobel.cpp:59]   --->   Operation 43 'getelementptr' 'buffer_a_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (1.17ns)   --->   "%window_a_1_2_1 = load i10 %buffer_a_2_addr" [sobel.cpp:59]   --->   Operation 44 'load' 'window_a_1_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%buffer_b_2_addr = getelementptr i16 %buffer_b_2, i64 0, i64 %zext_ln47_1" [sobel.cpp:60]   --->   Operation 45 'getelementptr' 'buffer_b_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (1.17ns)   --->   "%window_b_1_2_1 = load i10 %buffer_b_2_addr" [sobel.cpp:60]   --->   Operation 46 'load' 'window_b_1_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_2 : Operation 47 [1/1] (0.60ns)   --->   "%icmp_ln51 = icmp_eq  i10 %col1, i10 640" [sobel.cpp:51]   --->   Operation 47 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 0.60> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %rewind_header, void %VITIS_LOOP_51_2_proc.exit" [sobel.cpp:51]   --->   Operation 48 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln0 = br void %rewind_header"   --->   Operation 49 'br' 'br_ln0' <Predicate = (icmp_ln51)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.35>
ST_3 : Operation 50 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln51 = mul i20 %zext_ln51, i20 1278" [sobel.cpp:51]   --->   Operation 50 'mul' 'mul_ln51' <Predicate = (do_init)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 51 [2/2] (1.17ns)   --->   "%window_a_0_2_1 = load i10 %buffer_a_1_addr" [sobel.cpp:59]   --->   Operation 51 'load' 'window_a_0_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 52 [2/2] (1.17ns)   --->   "%window_b_0_2_1 = load i10 %buffer_b_1_addr" [sobel.cpp:60]   --->   Operation 52 'load' 'window_b_0_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 53 [1/2] (1.17ns)   --->   "%window_a_1_2_1 = load i10 %buffer_a_2_addr" [sobel.cpp:59]   --->   Operation 53 'load' 'window_a_1_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%empty_32 = trunc i16 %window_a_1_2_1" [sobel.cpp:59]   --->   Operation 54 'trunc' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.17ns)   --->   "%store_ln59 = store i16 %window_a_1_2_1, i10 %buffer_a_1_addr" [sobel.cpp:59]   --->   Operation 55 'store' 'store_ln59' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 56 [1/2] (1.17ns)   --->   "%window_b_1_2_1 = load i10 %buffer_b_2_addr" [sobel.cpp:60]   --->   Operation 56 'load' 'window_b_1_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%empty_33 = trunc i16 %window_b_1_2_1" [sobel.cpp:60]   --->   Operation 57 'trunc' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.17ns)   --->   "%store_ln60 = store i16 %window_b_1_2_1, i10 %buffer_b_1_addr" [sobel.cpp:60]   --->   Operation 58 'store' 'store_ln60' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%window_a_1_0_1 = load i16 %window_a_1_1" [sobel.cpp:69]   --->   Operation 59 'load' 'window_a_1_0_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%empty_36 = trunc i16 %window_a_1_0_1" [sobel.cpp:69]   --->   Operation 60 'trunc' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%store_ln69 = store i16 %window_a_1_0_1, i16 %window_a_1_0" [sobel.cpp:69]   --->   Operation 61 'store' 'store_ln69' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%window_b_1_0_1 = load i16 %window_b_1_1" [sobel.cpp:70]   --->   Operation 62 'load' 'window_b_1_0_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%empty_37 = trunc i16 %window_b_1_0_1" [sobel.cpp:70]   --->   Operation 63 'trunc' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%store_ln70 = store i16 %window_b_1_0_1, i16 %window_b_1_0" [sobel.cpp:70]   --->   Operation 64 'store' 'store_ln70' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%window_a_1_1_1 = load i16 %window_a_1_2" [sobel.cpp:69]   --->   Operation 65 'load' 'window_a_1_1_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%store_ln69 = store i16 %window_a_1_1_1, i16 %window_a_1_1" [sobel.cpp:69]   --->   Operation 66 'store' 'store_ln69' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%window_b_1_1_1 = load i16 %window_b_1_2" [sobel.cpp:70]   --->   Operation 67 'load' 'window_b_1_1_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%store_ln70 = store i16 %window_b_1_1_1, i16 %window_b_1_1" [sobel.cpp:70]   --->   Operation 68 'store' 'store_ln70' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%store_ln72 = store i16 %window_a_1_2_1, i16 %window_a_1_2" [sobel.cpp:72]   --->   Operation 69 'store' 'store_ln72' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%store_ln73 = store i16 %window_b_1_2_1, i16 %window_b_1_2" [sobel.cpp:73]   --->   Operation 70 'store' 'store_ln73' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.17>
ST_4 : Operation 71 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln51 = mul i20 %zext_ln51, i20 1278" [sobel.cpp:51]   --->   Operation 71 'mul' 'mul_ln51' <Predicate = (do_init)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 72 [1/2] (1.17ns)   --->   "%window_a_0_2_1 = load i10 %buffer_a_1_addr" [sobel.cpp:59]   --->   Operation 72 'load' 'window_a_0_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_4 : Operation 73 [1/2] (1.17ns)   --->   "%window_b_0_2_1 = load i10 %buffer_b_1_addr" [sobel.cpp:60]   --->   Operation 73 'load' 'window_b_0_2_1' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>

State 5 <SV = 4> <Delay = 4.05>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%icmp_rewind = phi i1 0, void %entry, i1 %icmp_phi, void %._crit_edge.i.i.i, i1 0, void %VITIS_LOOP_51_2_proc.exit"   --->   Operation 74 'phi' 'icmp_rewind' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%p_shl3_cast6_rewind = phi i19 0, void %entry, i19 %p_shl3_cast6_phi, void %._crit_edge.i.i.i, i19 0, void %VITIS_LOOP_51_2_proc.exit"   --->   Operation 75 'phi' 'p_shl3_cast6_rewind' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%p_shl_rewind = phi i20 0, void %entry, i20 %p_shl_phi, void %._crit_edge.i.i.i, i20 0, void %VITIS_LOOP_51_2_proc.exit"   --->   Operation 76 'phi' 'p_shl_rewind' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%mul_ln51_rewind = phi i20 0, void %entry, i20 %mul_ln51_phi, void %._crit_edge.i.i.i, i20 0, void %VITIS_LOOP_51_2_proc.exit" [sobel.cpp:51]   --->   Operation 77 'phi' 'mul_ln51_rewind' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.38ns)   --->   "%br_ln0 = br i1 %do_init, void %.split1.i.i.0.i, void %rewind_init"   --->   Operation 78 'br' 'br_ln0' <Predicate = true> <Delay = 0.38>
ST_5 : Operation 79 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln51 = mul i20 %zext_ln51, i20 1278" [sobel.cpp:51]   --->   Operation 79 'mul' 'mul_ln51' <Predicate = (do_init)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %row_read, i10 0"   --->   Operation 80 'bitconcatenate' 'p_shl' <Predicate = (do_init)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%p_shl3 = bitconcatenate i18 @_ssdm_op_BitConcatenate.i18.i10.i8, i10 %row_read, i8 0"   --->   Operation 81 'bitconcatenate' 'p_shl3' <Predicate = (do_init)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%p_shl3_cast6 = zext i18 %p_shl3"   --->   Operation 82 'zext' 'p_shl3_cast6' <Predicate = (do_init)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.38ns)   --->   "%br_ln51 = br void %.split1.i.i.0.i" [sobel.cpp:51]   --->   Operation 83 'br' 'br_ln51' <Predicate = (do_init)> <Delay = 0.38>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%icmp_phi = phi i1 %icmp, void %rewind_init, i1 %icmp_rewind, void %rewind_header"   --->   Operation 84 'phi' 'icmp_phi' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%p_shl3_cast6_phi = phi i19 %p_shl3_cast6, void %rewind_init, i19 %p_shl3_cast6_rewind, void %rewind_header"   --->   Operation 85 'phi' 'p_shl3_cast6_phi' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%p_shl_phi = phi i20 %p_shl, void %rewind_init, i20 %p_shl_rewind, void %rewind_header"   --->   Operation 86 'phi' 'p_shl_phi' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%mul_ln51_phi = phi i20 %mul_ln51, void %rewind_init, i20 %mul_ln51_rewind, void %rewind_header" [sobel.cpp:51]   --->   Operation 87 'phi' 'mul_ln51_phi' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i10 %col1" [sobel.cpp:47]   --->   Operation 88 'zext' 'zext_ln47' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.80ns)   --->   "%add_ln53_1 = add i19 %p_shl3_cast6_phi, i19 %zext_ln47" [sobel.cpp:53]   --->   Operation 89 'add' 'add_ln53_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i19 %add_ln53_1" [sobel.cpp:53]   --->   Operation 90 'zext' 'zext_ln53' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.80ns)   --->   "%add_ln53 = add i20 %zext_ln53, i20 %p_shl_phi" [sobel.cpp:53]   --->   Operation 91 'add' 'add_ln53' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i20 %add_ln53" [sobel.cpp:54]   --->   Operation 92 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%src_addr = getelementptr i16 %src, i64 0, i64 %zext_ln54" [sobel.cpp:54]   --->   Operation 93 'getelementptr' 'src_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [2/2] (1.24ns)   --->   "%pin_a = load i20 %src_addr" [sobel.cpp:54]   --->   Operation 94 'load' 'pin_a' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_5 : Operation 95 [1/1] (0.80ns)   --->   "%add_ln55 = add i20 %add_ln53, i20 639" [sobel.cpp:55]   --->   Operation 95 'add' 'add_ln55' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln56 = zext i20 %add_ln55" [sobel.cpp:56]   --->   Operation 96 'zext' 'zext_ln56' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%src_addr_1 = getelementptr i16 %src, i64 0, i64 %zext_ln56" [sobel.cpp:56]   --->   Operation 97 'getelementptr' 'src_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [2/2] (1.24ns)   --->   "%pin_b = load i20 %src_addr_1" [sobel.cpp:56]   --->   Operation 98 'load' 'pin_b' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i9 @_ssdm_op_PartSelect.i9.i10.i32.i32, i10 %col1, i32 1, i32 9" [sobel.cpp:76]   --->   Operation 99 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.59ns)   --->   "%icmp_ln76 = icmp_ne  i9 %tmp_1, i9 0" [sobel.cpp:76]   --->   Operation 100 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/1] (0.12ns)   --->   "%and_ln76 = and i1 %icmp_phi, i1 %icmp_ln76" [sobel.cpp:76]   --->   Operation 101 'and' 'and_ln76' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %and_ln76, void %._crit_edge.i.i.i, void" [sobel.cpp:76]   --->   Operation 102 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln47_2 = zext i10 %col1" [sobel.cpp:47]   --->   Operation 103 'zext' 'zext_ln47_2' <Predicate = (and_ln76)> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.75ns)   --->   "%add_ln77_2 = add i13 %zext_ln47_2, i13 5636" [sobel.cpp:77]   --->   Operation 104 'add' 'add_ln77_2' <Predicate = (and_ln76)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%sext_ln77 = sext i13 %add_ln77_2" [sobel.cpp:77]   --->   Operation 105 'sext' 'sext_ln77' <Predicate = (and_ln76)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.80ns)   --->   "%add_ln77 = add i20 %sext_ln77, i20 %mul_ln51_phi" [sobel.cpp:77]   --->   Operation 106 'add' 'add_ln77' <Predicate = (and_ln76)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 107 [1/1] (0.77ns)   --->   "%tmp_i_i10_i = sub i15 %empty_32, i15 %empty_36" [sobel.cpp:59]   --->   Operation 107 'sub' 'tmp_i_i10_i' <Predicate = (and_ln76)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.77ns)   --->   "%tmp24_i_i6_i = sub i15 %empty_33, i15 %empty_37" [sobel.cpp:60]   --->   Operation 108 'sub' 'tmp24_i_i6_i' <Predicate = (and_ln76)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.73>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 641, i64 641, i64 641"   --->   Operation 109 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%specpipeline_ln53 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [sobel.cpp:53]   --->   Operation 110 'specpipeline' 'specpipeline_ln53' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%specloopname_ln53 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [sobel.cpp:53]   --->   Operation 111 'specloopname' 'specloopname_ln53' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 112 [1/2] (1.24ns)   --->   "%pin_a = load i20 %src_addr" [sobel.cpp:54]   --->   Operation 112 'load' 'pin_a' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_6 : Operation 113 [1/2] (1.24ns)   --->   "%pin_b = load i20 %src_addr_1" [sobel.cpp:56]   --->   Operation 113 'load' 'pin_b' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 921600> <RAM>
ST_6 : Operation 114 [1/1] (1.17ns)   --->   "%store_ln62 = store i16 %pin_a, i10 %buffer_a_2_addr" [sobel.cpp:62]   --->   Operation 114 'store' 'store_ln62' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_6 : Operation 115 [1/1] (1.17ns)   --->   "%store_ln63 = store i16 %pin_b, i10 %buffer_b_2_addr" [sobel.cpp:63]   --->   Operation 115 'store' 'store_ln63' <Predicate = true> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 641> <RAM>
ST_6 : Operation 116 [1/1] (0.00ns)   --->   "%window_a_0_0_1 = load i16 %window_a_0_1" [sobel.cpp:69]   --->   Operation 116 'load' 'window_a_0_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "%store_ln69 = store i16 %window_a_0_0_1, i16 %window_a_0_0" [sobel.cpp:69]   --->   Operation 117 'store' 'store_ln69' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "%window_b_0_0_1 = load i16 %window_b_0_1" [sobel.cpp:70]   --->   Operation 118 'load' 'window_b_0_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%store_ln70 = store i16 %window_b_0_0_1, i16 %window_b_0_0" [sobel.cpp:70]   --->   Operation 119 'store' 'store_ln70' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%window_a_0_1_1 = load i16 %window_a_0_2" [sobel.cpp:69]   --->   Operation 120 'load' 'window_a_0_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%empty_34 = trunc i16 %window_a_0_1_1" [sobel.cpp:69]   --->   Operation 121 'trunc' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "%store_ln69 = store i16 %window_a_0_1_1, i16 %window_a_0_1" [sobel.cpp:69]   --->   Operation 122 'store' 'store_ln69' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (0.00ns)   --->   "%window_b_0_1_1 = load i16 %window_b_0_2" [sobel.cpp:70]   --->   Operation 123 'load' 'window_b_0_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%empty_35 = trunc i16 %window_b_0_1_1" [sobel.cpp:70]   --->   Operation 124 'trunc' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "%store_ln70 = store i16 %window_b_0_1_1, i16 %window_b_0_1" [sobel.cpp:70]   --->   Operation 125 'store' 'store_ln70' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (0.00ns)   --->   "%store_ln72 = store i16 %window_a_0_2_1, i16 %window_a_0_2" [sobel.cpp:72]   --->   Operation 126 'store' 'store_ln72' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 127 [1/1] (0.00ns)   --->   "%store_ln73 = store i16 %window_b_0_2_1, i16 %window_b_0_2" [sobel.cpp:73]   --->   Operation 127 'store' 'store_ln73' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "%window_a_2_0_1 = load i16 %window_a_2_1" [sobel.cpp:69]   --->   Operation 128 'load' 'window_a_2_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "%store_ln69 = store i16 %window_a_2_0_1, i16 %window_a_2_0" [sobel.cpp:69]   --->   Operation 129 'store' 'store_ln69' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%window_b_2_0_1 = load i16 %window_b_2_1" [sobel.cpp:70]   --->   Operation 130 'load' 'window_b_2_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%store_ln70 = store i16 %window_b_2_0_1, i16 %window_b_2_0" [sobel.cpp:70]   --->   Operation 131 'store' 'store_ln70' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 132 [1/1] (0.00ns)   --->   "%window_a_2_1_1 = load i16 %window_a_2_2" [sobel.cpp:69]   --->   Operation 132 'load' 'window_a_2_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 133 [1/1] (0.00ns)   --->   "%empty_38 = trunc i16 %window_a_2_1_1" [sobel.cpp:69]   --->   Operation 133 'trunc' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%store_ln69 = store i16 %window_a_2_1_1, i16 %window_a_2_1" [sobel.cpp:69]   --->   Operation 134 'store' 'store_ln69' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 135 [1/1] (0.00ns)   --->   "%window_b_2_1_1 = load i16 %window_b_2_2" [sobel.cpp:70]   --->   Operation 135 'load' 'window_b_2_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 136 [1/1] (0.00ns)   --->   "%empty_39 = trunc i16 %window_b_2_1_1" [sobel.cpp:70]   --->   Operation 136 'trunc' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "%store_ln70 = store i16 %window_b_2_1_1, i16 %window_b_2_1" [sobel.cpp:70]   --->   Operation 137 'store' 'store_ln70' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (0.00ns)   --->   "%store_ln72 = store i16 %pin_a, i16 %window_a_2_2" [sobel.cpp:72]   --->   Operation 138 'store' 'store_ln72' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 139 [1/1] (0.00ns)   --->   "%store_ln73 = store i16 %pin_b, i16 %window_b_2_2" [sobel.cpp:73]   --->   Operation 139 'store' 'store_ln73' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 140 [1/1] (0.80ns)   --->   "%add_ln77_1 = add i20 %add_ln77, i20 1048574" [sobel.cpp:77]   --->   Operation 140 'add' 'add_ln77_1' <Predicate = (and_ln76)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i20 %add_ln77_1" [sobel.cpp:78]   --->   Operation 141 'zext' 'zext_ln78' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 142 [1/1] (0.80ns)   --->   "%add_ln78 = add i20 %add_ln77, i20 637" [sobel.cpp:78]   --->   Operation 142 'add' 'add_ln78' <Predicate = (and_ln76)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 143 [1/1] (0.00ns)   --->   "%add_ln78_cast_i = zext i20 %add_ln78" [sobel.cpp:78]   --->   Operation 143 'zext' 'add_ln78_cast_i' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 144 [1/1] (0.00ns)   --->   "%tmp12_i_i_i = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp_i_i10_i, i1 0" [sobel.cpp:59]   --->   Operation 144 'bitconcatenate' 'tmp12_i_i_i' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 145 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln82 = add i16 %pin_a, i16 %window_a_0_2_1" [sobel.cpp:82]   --->   Operation 145 'add' 'add_ln82' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 146 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln82 = sub i16 %add_ln82, i16 %window_a_0_0_1" [sobel.cpp:82]   --->   Operation 146 'sub' 'sub_ln82' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 147 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln82_1 = add i16 %sub_ln82, i16 %tmp12_i_i_i" [sobel.cpp:82]   --->   Operation 147 'add' 'add_ln82_1' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 148 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumx_a = sub i16 %add_ln82_1, i16 %window_a_2_0_1" [sobel.cpp:82]   --->   Operation 148 'sub' 'sumx_a' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node sumx_a_1)   --->   "%trunc_ln28 = trunc i16 %sumx_a" [sobel.cpp:28]   --->   Operation 149 'trunc' 'trunc_ln28' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 150 [1/1] (0.77ns)   --->   "%tmp17_i_i8_i = sub i15 %empty_38, i15 %empty_34" [sobel.cpp:69]   --->   Operation 150 'sub' 'tmp17_i_i8_i' <Predicate = (and_ln76)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 151 [1/1] (0.00ns)   --->   "%tmp18_i_i_i = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp17_i_i8_i, i1 0" [sobel.cpp:69]   --->   Operation 151 'bitconcatenate' 'tmp18_i_i_i' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 152 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln83 = sub i16 %pin_a, i16 %window_a_0_2_1" [sobel.cpp:83]   --->   Operation 152 'sub' 'sub_ln83' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 153 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln83_1 = sub i16 %sub_ln83, i16 %window_a_0_0_1" [sobel.cpp:83]   --->   Operation 153 'sub' 'sub_ln83_1' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 154 [1/1] (0.00ns)   --->   "%trunc_ln83 = trunc i16 %window_a_2_0_1" [sobel.cpp:83]   --->   Operation 154 'trunc' 'trunc_ln83' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln83_1 = trunc i16 %sub_ln83_1" [sobel.cpp:83]   --->   Operation 155 'trunc' 'trunc_ln83_1' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln83_3 = trunc i15 %tmp17_i_i8_i" [sobel.cpp:83]   --->   Operation 156 'trunc' 'trunc_ln83_3' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln83_2 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i7.i1, i7 %trunc_ln83_3, i1 0" [sobel.cpp:83]   --->   Operation 157 'bitconcatenate' 'trunc_ln83_2' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 158 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83 = add i16 %sub_ln83_1, i16 %tmp18_i_i_i" [sobel.cpp:83]   --->   Operation 158 'add' 'add_ln83' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 159 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumy_a = add i16 %add_ln83, i16 %window_a_2_0_1" [sobel.cpp:83]   --->   Operation 159 'add' 'sumy_a' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 160 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln28 = add i8 %trunc_ln83, i8 %trunc_ln83_2" [sobel.cpp:28]   --->   Operation 160 'add' 'add_ln28' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 161 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%add_ln28_1 = add i8 %add_ln28, i8 %trunc_ln83_1" [sobel.cpp:28]   --->   Operation 161 'add' 'add_ln28_1' <Predicate = (and_ln76)> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node sumx_a_1)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumx_a, i32 15" [sobel.cpp:85]   --->   Operation 162 'bitselect' 'tmp_2' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i16.i32.i32, i16 %sumx_a, i32 8, i32 15" [sobel.cpp:85]   --->   Operation 163 'partselect' 'tmp_3' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 164 [1/1] (0.58ns)   --->   "%icmp_ln85 = icmp_sgt  i8 %tmp_3, i8 0" [sobel.cpp:85]   --->   Operation 164 'icmp' 'icmp_ln85' <Predicate = (and_ln76)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node sumx_a_1)   --->   "%or_ln85 = or i1 %tmp_2, i1 %icmp_ln85" [sobel.cpp:85]   --->   Operation 165 'or' 'or_ln85' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node sumx_a_1)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumx_a, i32 15" [sobel.cpp:85]   --->   Operation 166 'bitselect' 'tmp_4' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node sumx_a_1)   --->   "%xor_ln85 = xor i1 %tmp_4, i1 1" [sobel.cpp:85]   --->   Operation 167 'xor' 'xor_ln85' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node sumx_a_1)   --->   "%select_ln85 = select i1 %xor_ln85, i8 255, i8 0" [sobel.cpp:85]   --->   Operation 168 'select' 'select_ln85' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 169 [1/1] (0.30ns) (out node of the LUT)   --->   "%sumx_a_1 = select i1 %or_ln85, i8 %select_ln85, i8 %trunc_ln28" [sobel.cpp:85]   --->   Operation 169 'select' 'sumx_a_1' <Predicate = (and_ln76)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i8 %sumx_a_1" [sobel.cpp:28]   --->   Operation 170 'zext' 'zext_ln28' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node sumy_a_1)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumy_a, i32 15" [sobel.cpp:86]   --->   Operation 171 'bitselect' 'tmp_5' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i16.i32.i32, i16 %sumy_a, i32 8, i32 15" [sobel.cpp:86]   --->   Operation 172 'partselect' 'tmp_6' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 173 [1/1] (0.58ns)   --->   "%icmp_ln86 = icmp_sgt  i8 %tmp_6, i8 0" [sobel.cpp:86]   --->   Operation 173 'icmp' 'icmp_ln86' <Predicate = (and_ln76)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node sumy_a_1)   --->   "%or_ln86 = or i1 %tmp_5, i1 %icmp_ln86" [sobel.cpp:86]   --->   Operation 174 'or' 'or_ln86' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node sumy_a_1)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumy_a, i32 15" [sobel.cpp:86]   --->   Operation 175 'bitselect' 'tmp_7' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node sumy_a_1)   --->   "%xor_ln86 = xor i1 %tmp_7, i1 1" [sobel.cpp:86]   --->   Operation 176 'xor' 'xor_ln86' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node sumy_a_1)   --->   "%select_ln86 = select i1 %xor_ln86, i8 255, i8 0" [sobel.cpp:86]   --->   Operation 177 'select' 'select_ln86' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 178 [1/1] (0.30ns) (out node of the LUT)   --->   "%sumy_a_1 = select i1 %or_ln86, i8 %select_ln86, i8 %add_ln28_1" [sobel.cpp:86]   --->   Operation 178 'select' 'sumy_a_1' <Predicate = (and_ln76)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i8 %sumy_a_1" [sobel.cpp:28]   --->   Operation 179 'zext' 'zext_ln28_1' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 180 [1/1] (0.70ns)   --->   "%add_ln87 = add i9 %zext_ln28_1, i9 %zext_ln28" [sobel.cpp:87]   --->   Operation 180 'add' 'add_ln87' <Predicate = (and_ln76)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 181 [1/1] (0.70ns)   --->   "%add_ln28_2 = add i8 %sumy_a_1, i8 %sumx_a_1" [sobel.cpp:28]   --->   Operation 181 'add' 'add_ln28_2' <Predicate = (and_ln76)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %add_ln87, i32 8" [sobel.cpp:87]   --->   Operation 182 'bitselect' 'tmp_8' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 183 [1/1] (0.30ns)   --->   "%pout_a = select i1 %tmp_8, i8 255, i8 %add_ln28_2" [sobel.cpp:87]   --->   Operation 183 'select' 'pout_a' <Predicate = (and_ln76)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln30 = zext i8 %pout_a" [sobel.cpp:30]   --->   Operation 184 'zext' 'zext_ln30' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 185 [1/1] (0.00ns)   --->   "%dst_addr = getelementptr i16 %dst, i64 0, i64 %zext_ln78" [sobel.cpp:89]   --->   Operation 185 'getelementptr' 'dst_addr' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 186 [1/1] (1.24ns)   --->   "%store_ln89 = store i16 %zext_ln30, i20 %dst_addr" [sobel.cpp:89]   --->   Operation 186 'store' 'store_ln89' <Predicate = (and_ln76)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 917604> <RAM>
ST_6 : Operation 187 [1/1] (0.00ns)   --->   "%tmp25_i_i_i = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp24_i_i6_i, i1 0" [sobel.cpp:60]   --->   Operation 187 'bitconcatenate' 'tmp25_i_i_i' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 188 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln91 = add i16 %pin_b, i16 %window_b_0_2_1" [sobel.cpp:91]   --->   Operation 188 'add' 'add_ln91' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 189 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln91 = sub i16 %add_ln91, i16 %window_b_0_0_1" [sobel.cpp:91]   --->   Operation 189 'sub' 'sub_ln91' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 190 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln91_1 = add i16 %sub_ln91, i16 %tmp25_i_i_i" [sobel.cpp:91]   --->   Operation 190 'add' 'add_ln91_1' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 191 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumx_b = sub i16 %add_ln91_1, i16 %window_b_2_0_1" [sobel.cpp:91]   --->   Operation 191 'sub' 'sumx_b' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node sumx_b_1)   --->   "%trunc_ln28_1 = trunc i16 %sumx_b" [sobel.cpp:28]   --->   Operation 192 'trunc' 'trunc_ln28_1' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 193 [1/1] (0.77ns)   --->   "%tmp30_i_i4_i = sub i15 %empty_39, i15 %empty_35" [sobel.cpp:70]   --->   Operation 193 'sub' 'tmp30_i_i4_i' <Predicate = (and_ln76)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 194 [1/1] (0.00ns)   --->   "%tmp31_i_i_i = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %tmp30_i_i4_i, i1 0" [sobel.cpp:70]   --->   Operation 194 'bitconcatenate' 'tmp31_i_i_i' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 195 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln92 = sub i16 %pin_b, i16 %window_b_0_2_1" [sobel.cpp:92]   --->   Operation 195 'sub' 'sub_ln92' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 196 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sub_ln92_1 = sub i16 %sub_ln92, i16 %window_b_0_0_1" [sobel.cpp:92]   --->   Operation 196 'sub' 'sub_ln92_1' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 197 [1/1] (0.00ns)   --->   "%trunc_ln92 = trunc i16 %window_b_2_0_1" [sobel.cpp:92]   --->   Operation 197 'trunc' 'trunc_ln92' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 198 [1/1] (0.00ns)   --->   "%trunc_ln92_1 = trunc i16 %sub_ln92_1" [sobel.cpp:92]   --->   Operation 198 'trunc' 'trunc_ln92_1' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 199 [1/1] (0.00ns)   --->   "%trunc_ln92_3 = trunc i15 %tmp30_i_i4_i" [sobel.cpp:92]   --->   Operation 199 'trunc' 'trunc_ln92_3' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln92_2 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i7.i1, i7 %trunc_ln92_3, i1 0" [sobel.cpp:92]   --->   Operation 200 'bitconcatenate' 'trunc_ln92_2' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 201 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln92 = add i16 %sub_ln92_1, i16 %tmp31_i_i_i" [sobel.cpp:92]   --->   Operation 201 'add' 'add_ln92' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 202 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sumy_b = add i16 %add_ln92, i16 %window_b_2_0_1" [sobel.cpp:92]   --->   Operation 202 'add' 'sumy_b' <Predicate = (and_ln76)> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 203 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln28_3 = add i8 %trunc_ln92, i8 %trunc_ln92_2" [sobel.cpp:28]   --->   Operation 203 'add' 'add_ln28_3' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 204 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%add_ln28_4 = add i8 %add_ln28_3, i8 %trunc_ln92_1" [sobel.cpp:28]   --->   Operation 204 'add' 'add_ln28_4' <Predicate = (and_ln76)> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node sumx_b_1)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumx_b, i32 15" [sobel.cpp:94]   --->   Operation 205 'bitselect' 'tmp_9' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i16.i32.i32, i16 %sumx_b, i32 8, i32 15" [sobel.cpp:94]   --->   Operation 206 'partselect' 'tmp_10' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 207 [1/1] (0.58ns)   --->   "%icmp_ln94 = icmp_sgt  i8 %tmp_10, i8 0" [sobel.cpp:94]   --->   Operation 207 'icmp' 'icmp_ln94' <Predicate = (and_ln76)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node sumx_b_1)   --->   "%or_ln94 = or i1 %tmp_9, i1 %icmp_ln94" [sobel.cpp:94]   --->   Operation 208 'or' 'or_ln94' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node sumx_b_1)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumx_b, i32 15" [sobel.cpp:94]   --->   Operation 209 'bitselect' 'tmp_11' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node sumx_b_1)   --->   "%xor_ln94 = xor i1 %tmp_11, i1 1" [sobel.cpp:94]   --->   Operation 210 'xor' 'xor_ln94' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node sumx_b_1)   --->   "%select_ln94 = select i1 %xor_ln94, i8 255, i8 0" [sobel.cpp:94]   --->   Operation 211 'select' 'select_ln94' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 212 [1/1] (0.30ns) (out node of the LUT)   --->   "%sumx_b_1 = select i1 %or_ln94, i8 %select_ln94, i8 %trunc_ln28_1" [sobel.cpp:94]   --->   Operation 212 'select' 'sumx_b_1' <Predicate = (and_ln76)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 213 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i8 %sumx_b_1" [sobel.cpp:28]   --->   Operation 213 'zext' 'zext_ln28_2' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node sumy_b_1)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumy_b, i32 15" [sobel.cpp:95]   --->   Operation 214 'bitselect' 'tmp_12' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 215 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i16.i32.i32, i16 %sumy_b, i32 8, i32 15" [sobel.cpp:95]   --->   Operation 215 'partselect' 'tmp_13' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 216 [1/1] (0.58ns)   --->   "%icmp_ln95 = icmp_sgt  i8 %tmp_13, i8 0" [sobel.cpp:95]   --->   Operation 216 'icmp' 'icmp_ln95' <Predicate = (and_ln76)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node sumy_b_1)   --->   "%or_ln95 = or i1 %tmp_12, i1 %icmp_ln95" [sobel.cpp:95]   --->   Operation 217 'or' 'or_ln95' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node sumy_b_1)   --->   "%tmp_14 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sumy_b, i32 15" [sobel.cpp:95]   --->   Operation 218 'bitselect' 'tmp_14' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node sumy_b_1)   --->   "%xor_ln95 = xor i1 %tmp_14, i1 1" [sobel.cpp:95]   --->   Operation 219 'xor' 'xor_ln95' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node sumy_b_1)   --->   "%select_ln95 = select i1 %xor_ln95, i8 255, i8 0" [sobel.cpp:95]   --->   Operation 220 'select' 'select_ln95' <Predicate = (and_ln76)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 221 [1/1] (0.30ns) (out node of the LUT)   --->   "%sumy_b_1 = select i1 %or_ln95, i8 %select_ln95, i8 %add_ln28_4" [sobel.cpp:95]   --->   Operation 221 'select' 'sumy_b_1' <Predicate = (and_ln76)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 222 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i8 %sumy_b_1" [sobel.cpp:28]   --->   Operation 222 'zext' 'zext_ln28_3' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 223 [1/1] (0.70ns)   --->   "%add_ln96 = add i9 %zext_ln28_3, i9 %zext_ln28_2" [sobel.cpp:96]   --->   Operation 223 'add' 'add_ln96' <Predicate = (and_ln76)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 224 [1/1] (0.70ns)   --->   "%add_ln28_5 = add i8 %sumy_b_1, i8 %sumx_b_1" [sobel.cpp:28]   --->   Operation 224 'add' 'add_ln28_5' <Predicate = (and_ln76)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 225 [1/1] (0.00ns)   --->   "%tmp_15 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %add_ln96, i32 8" [sobel.cpp:96]   --->   Operation 225 'bitselect' 'tmp_15' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 226 [1/1] (0.30ns)   --->   "%pout_b = select i1 %tmp_15, i8 255, i8 %add_ln28_5" [sobel.cpp:96]   --->   Operation 226 'select' 'pout_b' <Predicate = (and_ln76)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i8 %pout_b" [sobel.cpp:39]   --->   Operation 227 'zext' 'zext_ln39' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 228 [1/1] (0.00ns)   --->   "%dst_addr_1 = getelementptr i16 %dst, i64 0, i64 %add_ln78_cast_i" [sobel.cpp:98]   --->   Operation 228 'getelementptr' 'dst_addr_1' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 229 [1/1] (1.24ns)   --->   "%store_ln98 = store i16 %zext_ln39, i20 %dst_addr_1" [sobel.cpp:98]   --->   Operation 229 'store' 'store_ln98' <Predicate = (and_ln76)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 917604> <RAM>
ST_6 : Operation 230 [1/1] (0.00ns)   --->   "%br_ln99 = br void %._crit_edge.i.i.i" [sobel.cpp:99]   --->   Operation 230 'br' 'br_ln99' <Predicate = (and_ln76)> <Delay = 0.00>
ST_6 : Operation 231 [1/1] (0.00ns)   --->   "%return_ln0 = return void @_ssdm_op_Return"   --->   Operation 231 'return' 'return_ln0' <Predicate = (icmp_ln51)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('do_init') [30]  (0.387 ns)

 <State 2>: 1.18ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', sobel.cpp:51) [35]  (0 ns)
	'getelementptr' operation ('buffer_a_2_addr', sobel.cpp:59) [72]  (0 ns)
	'load' operation ('window_a[1][2]', sobel.cpp:59) on array 'buffer_a[2]', sobel.cpp:35 [73]  (1.18 ns)

 <State 3>: 2.35ns
The critical path consists of the following:
	'load' operation ('window_a[1][2]', sobel.cpp:59) on array 'buffer_a[2]', sobel.cpp:35 [73]  (1.18 ns)
	'store' operation ('store_ln59', sobel.cpp:59) of variable 'window_a[1][2]', sobel.cpp:59 on array 'buffer_a[1]', sobel.cpp:35 [75]  (1.18 ns)

 <State 4>: 1.18ns
The critical path consists of the following:
	'load' operation ('window_a[0][2]', sobel.cpp:59) on array 'buffer_a[1]', sobel.cpp:35 [69]  (1.18 ns)

 <State 5>: 4.06ns
The critical path consists of the following:
	'phi' operation ('p_shl3_cast6_rewind') with incoming values : ('p_shl3_cast6') [32]  (0 ns)
	multiplexor before 'phi' operation ('p_shl3_cast6_phi') with incoming values : ('p_shl3_cast6') [49]  (0.387 ns)
	'phi' operation ('p_shl3_cast6_phi') with incoming values : ('p_shl3_cast6') [49]  (0 ns)
	'add' operation ('add_ln53_1', sobel.cpp:53) [58]  (0.803 ns)
	'add' operation ('add_ln53', sobel.cpp:53) [60]  (0.809 ns)
	'add' operation ('add_ln55', sobel.cpp:55) [64]  (0.809 ns)
	'getelementptr' operation ('src_addr_1', sobel.cpp:56) [66]  (0 ns)
	'load' operation ('pin_b', sobel.cpp:56) on array 'src' [67]  (1.25 ns)

 <State 6>: 5.74ns
The critical path consists of the following:
	'load' operation ('pin_a', sobel.cpp:54) on array 'src' [63]  (1.25 ns)
	'add' operation ('add_ln82', sobel.cpp:82) [133]  (0 ns)
	'sub' operation ('sub_ln82', sobel.cpp:82) [134]  (0.675 ns)
	'add' operation ('add_ln82_1', sobel.cpp:82) [135]  (0 ns)
	'sub' operation ('sumx_a', sobel.cpp:82) [136]  (0.675 ns)
	'icmp' operation ('icmp_ln85', sobel.cpp:85) [152]  (0.581 ns)
	'or' operation ('or_ln85', sobel.cpp:85) [153]  (0 ns)
	'select' operation ('sumx_a', sobel.cpp:85) [157]  (0.303 ns)
	'add' operation ('add_ln28_2', sobel.cpp:28) [169]  (0.705 ns)
	'select' operation ('pout_a', sobel.cpp:87) [171]  (0.303 ns)
	'store' operation ('store_ln89', sobel.cpp:89) of variable 'zext_ln30', sobel.cpp:30 on array 'dst' [174]  (1.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
